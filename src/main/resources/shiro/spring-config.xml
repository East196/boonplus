<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		  http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:property-placeholder location="classpath:resources.properties" />

	<!-- 扫描注解Bean -->
	<context:component-scan base-package="cn.md.show">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<jpa:repositories base-package="cn.md.show.cms.dao" />



	<!-- 数据源 see https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_DruidDataSource%E5%8F%82%E8%80%83%E9%85%8D%E7%BD%AE 
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" 
		destroy-method="close"> 基本属性 url、user、password <property name="url" value="${connection.url}"/> 
		<property name="username" value="${connection.username}"/> <property name="password" 
		value="${connection.password}"/> 配置初始化大小、最小、最大 <property name="initialSize" 
		value="${druid.initialSize}"/> <property name="minIdle" value="${druid.minIdle}"/> 
		<property name="maxActive" value="${druid.maxActive}"/> 配置获取连接等待超时的时间 <property 
		name="maxWait" value="${druid.maxWait}"/> 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" 
		/> 配置一个连接在池中最小生存的时间，单位是毫秒 <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" 
		/> <property name="validationQuery" value="${druid.validationQuery}" /> <property 
		name="testWhileIdle" value="${druid.testWhileIdle}" /> <property name="testOnBorrow" 
		value="${druid.testOnBorrow}" /> <property name="testOnReturn" value="${druid.testOnReturn}" 
		/> 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" 
		/> <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" 
		/> 配置监控统计拦截的filters <property name="filters" value="${druid.filters}" /> 
		</bean> <bean id="dataSourceProxy" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy"> 
		<property name="targetDataSource" ref="dataSource"/> </bean> <bean id="jdbcTemplate" 
		class="org.springframework.jdbc.core.JdbcTemplate"> <constructor-arg ref="dataSourceProxy"/> 
		</bean> 事务管理器配置 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSourceProxy"/> </bean> -->

	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true" proxy-target-class="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* cn.md.show..service..*+.*(..))" />
		<aop:advisor id="txAdvisor" advice-ref="txAdvice"
			pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- <bean id="logAspect" class="cn.md.common.spring.HelloAspect"/> -->
<!-- 	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:pointcut id="logPointcut" expression="execution(* cn.md.show..controller..*+.*(..))" />
		<aop:aspect ref="logAspect">
			<aop:around pointcut-ref="logPointcut" method="arround"/>
		</aop:aspect>
	</aop:config>
 -->	<!-- 使用MyBatis -->
	<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property  name="configLocation"  value="classpath:configuration.xml"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="cn.md.show.cms.data" />
	</bean> -->

<!-- 使用缓存 -->
	<!-- <cache:annotation-driven cache-manager="redisCacheManager" /> -->

	<!--如果使用混合缓存,取没问题,存在哪一个呢？ -->
<!-- 	<bean id="cacheManager" class="org.springframework.cache.support.CompositeCacheManager">
		<property name="cacheManagers">
			<list>
				<ref bean="ehcacheCacheManager" />
				<ref bean="redisCacheManager" />
			</list>
		</property>
		<property name="fallbackToNoOpCache" value="true" />
	</bean> -->



<!-- 使用Shiro +web.xml shiroFilter -->
	<!-- <bean class="cn.md.show.common.utils.SpringUtils" /> -->

	<!-- <import resource="classpath:spring-config-shiro.xml" /> -->
</beans>